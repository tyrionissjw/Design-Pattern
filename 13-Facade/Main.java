/*
	 1.作用： 为子系统中的一组接口提供一个统一接口，避免外部于子系统直接通信，减少通信复杂度
	 2.子系统的产生是处理复杂系统的方法――分而治之。客户端只关注子系统的一部分功能，若不使用门面，
		 则需要与子系统许多对象通信后才能或得这部分功能。
	 3.子系统不是单独的类，是类的集合。子系统不知道门面的存在(即门面不能耦合入子系统,子系统不能持有门面的引用)。
		 对于子系统而言，门面仅仅是另一个客户端。
     4.不应通过继承门面来间接为子系统增加功能，这不是门面类的目的。但若一个门面类不能将子系统的所有行为提供给客户端，
		 则可通过修改门面类或继承的方法使子系统不能提供的行为提供出去。
	 5.门面是单例，门面对象持有子系统引用，将客户端调用委派到子系统中去。一个子系统可以有多个门面类，用来提供不同的接口。
		 或者子系统太复杂其中的类不能遵守蒂米特法则就将子系统分为多个外观。
	 6.使用门面模式的场合：
		 ①子系统越来越复杂，门面模式使子系统更具复用性。它提供一个简单的视图，对大多数用户这个视图已足够。需要更多功能的用户可以
			 越过门面直接对子系统操作。
	 
	 
*/
public class Main {
	 public static void main(String[] args) {
		 ;
	 }
}